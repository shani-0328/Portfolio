/* RetroModern-Enhanced.css - Advanced retro-inspired styling with unique animations */

/* Electric glow effect for featured tags */
.electric-glow {
  position: relative;
  overflow: hidden;
  box-shadow: 0 0 5px rgba(0, 255, 255, 0.5),
              0 0 10px rgba(0, 255, 255, 0.3),
              0 0 15px rgba(0, 255, 255, 0.1);
  animation: pulse-glow 2s infinite;
}

.electric-glow::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.4),
    transparent
  );
  transform: skewX(-25deg);
  animation: electric-shine 3s infinite;
}

/* Advanced featured tag styling */
.featured-tag {
  background: linear-gradient(90deg, #00f2fe, #4facfe, #0084ff);
  text-transform: uppercase;
  letter-spacing: 1.5px;
  color: white;
  position: relative;
  overflow: hidden;
  z-index: 1;
  text-shadow: 0 0 5px rgba(0, 238, 255, 0.8), 
               0 0 10px rgba(0, 238, 255, 0.5);
}

.featured-tag::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background: rgba(255, 255, 255, 0.9);
  box-shadow: 0 0 8px 1px cyan;
  animation: scan-line 2s linear infinite;
  z-index: 0;
}

/* Particle effects for featured tag */
.featured-tag::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  background-image: radial-gradient(circle, #fff 1%, transparent 10%),
                    radial-gradient(circle, #fff 1%, transparent 10%);
  background-position: 0 0, 10px 10px;
  background-size: 20px 20px;
  opacity: 0.1;
  animation: featured-particles 4s linear infinite;
}

@keyframes featured-particles {
  0% {
    background-position: 0 0, 10px 10px;
    opacity: 0.05;
  }
  25% {
    opacity: 0.1;
  }
  50% {
    background-position: 10px 0, 0 10px;
    opacity: 0.15;
  }
  75% {
    opacity: 0.1;
  }
  100% {
    background-position: 0 0, 10px 10px;
    opacity: 0.05;
  }
}

/* Featured tag glitch effect - more intense than standard glitch */
.featured-tag .glitch-text::before {
  left: 2px;
  text-shadow: -1.5px 0 #ff00c1;
  animation: glitch-anim-1 1.5s infinite linear alternate-reverse;
}

.featured-tag .glitch-text::after {
  left: -2px;
  text-shadow: 2px 0 #00fff9;
  animation: glitch-anim-2 1.8s infinite linear alternate-reverse;
}

/* Add a special hover effect for featured tags */
.featured-tag:hover {
  animation: featured-pulse 0.6s infinite;
  cursor: default;
}

@keyframes featured-pulse {
  0%, 100% {
    background: linear-gradient(90deg, #00f2fe, #4facfe, #0084ff);
  }
  50% {
    background: linear-gradient(90deg, #4facfe, #0084ff, #00f2fe);
  }
}

@keyframes scan-line {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(100%);
  }
}

@keyframes electric-shine {
  0% {
    left: -100%;
  }
  20%, 100% {
    left: 100%;
  }
}

@keyframes pulse-glow {
  0%, 100% {
    box-shadow: 0 0 5px rgba(0, 255, 255, 0.5),
                0 0 10px rgba(0, 255, 255, 0.3),
                0 0 15px rgba(0, 255, 255, 0.1);
  }
  50% {
    box-shadow: 0 0 8px rgba(0, 255, 255, 0.6),
                0 0 15px rgba(0, 255, 255, 0.4),
                0 0 20px rgba(0, 255, 255, 0.2);
  }
}

/* Holographic text effect with variable shimmer animation */
.holographic-text {
  background: linear-gradient(
    90deg, 
    #ff00cc,
    #00ffcc,
    #00ccff,
    #cc00ff
  );
  background-size: 300% 100%;
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  animation: holographicShimmer 8s ease infinite;
  text-shadow: 0 0 0.5rem rgba(255, 255, 255, 0.5);
}

@keyframes holographicShimmer {
  0%, 100% { 
    background-position: 0% 50%;
    text-shadow: 
      0 0 7px rgba(255, 255, 255, 0.6),
      0 0 10px rgba(0, 255, 255, 0.4),
      0 0 21px rgba(0, 255, 255, 0.3),
      0 0 42px rgba(0, 255, 255, 0.2);
  }
  50% { 
    background-position: 100% 50%;
    text-shadow: 
      0 0 7px rgba(255, 255, 255, 0.8),
      0 0 10px rgba(0, 255, 255, 0.5),
      0 0 21px rgba(0, 255, 255, 0.4),
      0 0 42px rgba(0, 255, 255, 0.3);
  }
}

/* Perspective Tilt Effect on cards/elements */
.tilt-effect {
  transform-style: preserve-3d;
  transition: transform 0.5s ease;
}

.tilt-effect:hover {
  transform: perspective(1000px) rotateX(5deg) rotateY(5deg);
}

/* Enhanced floating tags with rotation */
@keyframes floatWithRotate {
  0% { 
    transform: translateY(0px) rotate(0deg); 
    filter: hue-rotate(0deg);
  }
  33% { 
    transform: translateY(-10px) rotate(2deg);
    filter: hue-rotate(60deg);
  }
  66% { 
    transform: translateY(-5px) rotate(-2deg);
    filter: hue-rotate(120deg);
  }
  100% { 
    transform: translateY(0px) rotate(0deg);
    filter: hue-rotate(0deg);
  }
}

.float-rotate {
  animation: floatWithRotate 8s ease-in-out infinite;
}

.float-rotate-delay-1 {
  animation-delay: 2s;
}

.float-rotate-delay-2 {
  animation-delay: 4s;
}

.float-rotate-delay-3 {
  animation-delay: 6s;
}

/* Cyberpunk Pulse Border Effect */
.pulse-border {
  position: relative;
  isolation: isolate;
}

.pulse-border::before {
  content: '';
  position: absolute;
  inset: -3px;
  background: linear-gradient(45deg, #00ffff, #ff00ff, #ffff00, #00ffff);
  background-size: 400% 400%;
  animation: gradientBorder 3s ease infinite;
  border-radius: inherit;
  z-index: -1;
  filter: blur(3px);
}

@keyframes gradientBorder {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Digital Distortion Effect */
.digital-distortion {
  position: relative;
  overflow: hidden;
}

.digital-distortion::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(transparent, rgba(0, 255, 255, 0.05), transparent);
  opacity: 0;
  animation: digitalGlitch 5s infinite;
}

@keyframes digitalGlitch {
  0%, 100% { opacity: 0; transform: translateY(0); }
  7%, 13% { opacity: 0.3; transform: translateY(-2px) skewX(3deg); }
  10% { opacity: 0.3; transform: translateY(1px) skewX(-2deg); }
  30%, 36% { opacity: 0.3; transform: translateY(2px); }
  33% { opacity: 0.3; transform: translateY(-2px); }
  45%, 100% { opacity: 0; transform: translateY(0); }
}

/* 3D Layered Card Effect */
.layered-card {
  position: relative;
  transition: transform 0.3s ease;
}

.layered-card::after {
  content: '';
  position: absolute;
  inset: 5px -5px -5px 5px;
  background: inherit;
  filter: brightness(0.7);
  z-index: -1;
  transition: transform 0.3s ease;
}

.layered-card:hover {
  transform: translateY(-5px);
}

.layered-card:hover::after {
  transform: translateY(5px);
}

/* Retro VHS Tracking Lines Effect */
.vhs-effect {
  position: relative;
  overflow: hidden;
}

.vhs-effect::before {
  content: '';
  position: absolute;
  top: -500%; /* Start outside the view */
  left: 0;
  width: 100%;
  height: 700%;
  background: linear-gradient(
    transparent, 
    transparent 80%, 
    rgba(255, 255, 255, 0.15) 80%, 
    rgba(255, 255, 255, 0.15) 81%, 
    transparent 81%
  );
  background-size: 100% 5px;
  animation: trackingLines 12s linear infinite;
  pointer-events: none;
  opacity: 0;
}

@keyframes trackingLines {
  0% { transform: translateY(0); opacity: 0; }
  10% { opacity: 0.5; }
  30% { opacity: 0.5; }
  31% { opacity: 0; }
  45% { opacity: 0; }
  46% { opacity: 0.5; }
  60% { opacity: 0.5; }
  61% { opacity: 0; }
  100% { transform: translateY(100%); opacity: 0; }
}

/* Cybernetic Circuit Animation */
.cyber-circuit {
  position: relative;
  isolation: isolate;
}

.cyber-circuit::before {
  content: '';
  position: absolute;
  inset: 0;
  background-image: 
    radial-gradient(circle at 50% 50%, transparent 90%, rgba(0, 255, 255, 0.1) 90%),
    linear-gradient(90deg, transparent 90%, rgba(255, 0, 255, 0.1) 90%),
    linear-gradient(0deg, transparent 90%, rgba(0, 255, 255, 0.1) 90%);
  background-size: 20px 20px, 20px 20px, 20px 20px;
  animation: circuitMove 30s linear infinite;
  opacity: 0.3;
  z-index: -1;
  pointer-events: none;
}

@keyframes circuitMove {
  0% { background-position: 0 0, 0 0, 0 0; }
  100% { background-position: 100px 0, 50px 50px, 0 100px; }
}

/* Animated Gradient Border Button */
.gradient-border-btn {
  position: relative;
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  border: none;
  isolation: isolate;
  z-index: 1;
  transition: all 0.3s ease;
}

.gradient-border-btn::before {
  content: '';
  position: absolute;
  inset: -2px;
  background: linear-gradient(45deg, #ff00cc, #00ffcc, #00ccff, #cc00ff);
  background-size: 300% 300%;
  animation: gradientBorder 5s ease infinite;
  z-index: -1;
  border-radius: inherit;
}

.gradient-border-btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
}

/* Data Stream Animation */
.data-stream {
  position: relative;
  overflow: hidden;
}

.data-stream::after {
  content: '';
  position: absolute;
  top: -100%;
  left: 0;
  width: 100%;
  height: 300%;
  background: linear-gradient(0deg,
    transparent 0%,
    rgba(32, 245, 240, 0.1) 40%,
    rgba(32, 245, 240, 0.3) 45%,
    rgba(32, 245, 240, 0.1) 50%,
    transparent 90%
  );
  animation: dataStreamFlow 5s linear infinite;
  pointer-events: none;
}

@keyframes dataStreamFlow {
  0% { transform: translateY(0); }
  100% { transform: translateY(100%); }
}

/* Cyberpunk Flicker Text Effect */
.flicker-text {
  position: relative;
  text-shadow: 
    0 0 5px rgba(0, 255, 255, 0.7),
    0 0 10px rgba(0, 255, 255, 0.5);
  animation: textFlicker 5s infinite;
}

@keyframes textFlicker {
  0%, 100% { opacity: 1; }
  3%, 6% { opacity: 0.5; }
  9% { opacity: 1; }
  39%, 42% { opacity: 0.5; }
  45% { opacity: 1; }
  60% { opacity: 1; }
  61% { opacity: 0.5; }
  62% { opacity: 1; }
}

/* Glitchy Image Effect */
.glitch-image-wrap {
  position: relative;
  overflow: hidden;
}

.glitch-image-wrap::before,
.glitch-image-wrap::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: inherit;
  background-size: cover;
  background-position: center;
  opacity: 0;
}

.glitch-image-wrap::before {
  transform: translateX(5px);
  filter: hue-rotate(90deg);
  mix-blend-mode: screen;
  animation: imageGlitch1 10s infinite steps(1);
}

.glitch-image-wrap::after {
  transform: translateX(-5px);
  filter: hue-rotate(-90deg);
  mix-blend-mode: multiply;
  animation: imageGlitch2 10s infinite steps(1);
}

@keyframes imageGlitch1 {
  0%, 100% { opacity: 0; }
  2%, 4% { opacity: 0.3; }
  6% { opacity: 0; }
  40%, 42% { opacity: 0.3; }
  44% { opacity: 0; }
}

@keyframes imageGlitch2 {
  0%, 100% { opacity: 0; }
  3%, 5% { opacity: 0.3; }
  7% { opacity: 0; }
  41%, 43% { opacity: 0.3; }
  45% { opacity: 0; }
}

/* Futuristic typing animation */
.typing-effect {
  border-right: 3px solid #00bfff;
  overflow: hidden;
  white-space: nowrap;
  animation: typing 4s steps(30) infinite, caret 1s infinite;
}

@keyframes typing {
  0% { width: 0; }
  50% { width: 100%; }
  55% { width: 100%; }
  95% { width: 0; }
  100% { width: 0; }
}

@keyframes caret {
  0%, 100% { border-color: transparent; }
  50% { border-color: #00bfff; }
}

/* DNA Helix Loading Animation */
.dna-loader {
  position: relative;
  width: 80px;
  height: 80px;
}

.dna-loader::before,
.dna-loader::after {
  content: '';
  position: absolute;
  top: 0;
  width: 60%;
  height: 60%;
  border-radius: 50%;
  background-color: rgba(0, 255, 255, 0.5);
  animation: dnaRotate 1.5s linear infinite;
}

.dna-loader::after {
  background-color: rgba(255, 0, 255, 0.5);
  animation-delay: -0.75s;
}

@keyframes dnaRotate {
  0% { transform: translateX(0) translateY(0) scale(1); }
  25% { transform: translateX(15px) translateY(15px) scale(0.8); }
  50% { transform: translateX(0) translateY(30px) scale(1); }
  75% { transform: translateX(-15px) translateY(15px) scale(0.8); }
  100% { transform: translateX(0) translateY(0) scale(1); }
}

/* Electric border effect */
.electric-border {
  --border-width: 3px;
  position: relative;
  border-radius: inherit;
  isolation: isolate;
}

.electric-border::before {
  content: '';
  position: absolute;
  inset: calc(-1 * var(--border-width));
  background: linear-gradient(
    90deg, 
    #ff00cc, #00ffcc, #00ccff, 
    #cc00ff, #ff00cc
  );
  background-size: 400% 100%;
  border-radius: inherit;
  animation: electricBorder 3s linear infinite;
  z-index: -1;
}

@keyframes electricBorder {
  0% { background-position: 0% 0%; }
  50% { background-position: 100% 0%; }
  100% { background-position: 0% 0%; }
}

/* Hexagon Background Pattern */
.hex-pattern {
  position: relative;
  overflow: hidden;
}

.hex-pattern::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 200%;
  height: 200%;
  background-image: 
    repeating-linear-gradient(
      60deg, 
      rgba(0, 255, 255, 0.05) 0, 
      rgba(0, 255, 255, 0.05) 1px, 
      transparent 1px, 
      transparent 60px
    ),
    repeating-linear-gradient(
      120deg, 
      rgba(0, 255, 255, 0.05) 0, 
      rgba(0, 255, 255, 0.05) 1px, 
      transparent 1px, 
      transparent 60px
    ),
    repeating-linear-gradient(
      180deg, 
      rgba(0, 255, 255, 0.05) 0, 
      rgba(0, 255, 255, 0.05) 1px, 
      transparent 1px, 
      transparent 60px
    );
  opacity: 0.3;
  transform-origin: top left;
  animation: hexRotate 120s linear infinite;
  pointer-events: none;
  z-index: -1;
}

@keyframes hexRotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* 3D Button Effect */
.button-3d {
  position: relative;
  transform-style: preserve-3d;
  transition: all 0.3s ease;
}

.button-3d::before {
  content: '';
  position: absolute;
  inset: 0;
  background: inherit;
  filter: brightness(0.7);
  transform: translateZ(-10px);
  z-index: -1;
}

.button-3d:hover {
  transform: translateY(-5px) translateZ(0);
}

.button-3d:active {
  transform: translateY(0) translateZ(-5px);
}

/* Interactive glow based on mouse position (pair with JavaScript) */
.interactive-glow {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.interactive-glow::before {
  content: '';
  position: absolute;
  width: 150%;
  height: 150%;
  background: radial-gradient(
    circle at var(--x) var(--y),
    rgba(0, 255, 255, 0.4) 0%,
    transparent 50%
  );
  top: -25%;
  left: -25%;
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.interactive-glow:hover::before {
  opacity: 1;
}

/* Data Feed Loading Bar */
.data-loading {
  position: relative;
  background-color: rgba(0, 0, 0, 0.3);
  overflow: hidden;
  z-index: 0;
}

.data-loading::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 50%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(0, 255, 255, 0.3),
    transparent
  );
  animation: dataLoading 2s linear infinite;
  z-index: -1;
}

@keyframes dataLoading {
  0% { left: -100%; }
  100% { left: 150%; }
}
